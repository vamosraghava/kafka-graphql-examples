<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.openweb</groupId>
	<artifactId>graphql-endpoint</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>graphql-endpoint</name>
	<description>GraphQL endpoint of the open bank application</description>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<micronaut.version>1.3.0.BUILD-SNAPSHOT</micronaut.version>
		<micronaut-data.version>1.0.0.M5</micronaut-data.version>
		<micronaut-openapi.version>1.3.3</micronaut-openapi.version>
		<micronaut-graphql.version>1.3.0.BUILD-SNAPSHOT</micronaut-graphql.version>
		<micronaut-hibernate.version>1.2.3</micronaut-hibernate.version>
		<javax.persistence-api.version>2.2</javax.persistence-api.version>
		<logback-classic.version>1.2.3</logback-classic.version>
		<arrow.version>0.10.4</arrow.version>
		<spring-security.version>5.2.1.RELEASE</spring-security.version>
		<kotlin.version>1.3.61</kotlin.version>
		<kotlin-coroutines.version>1.3.2-1.3.60</kotlin-coroutines.version>
		<postgresql.version>42.2.9</postgresql.version>
		<topology.version>0.1.0-SNAPSHOT</topology.version>
		<exec.mainClass>nl.openweb.graphql_endpoint.GraphqlEndpointApplication</exec.mainClass>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>jcenter.bintray.com</id>
			<url>https://jcenter.bintray.com</url>
		</repository>
		<repository>
			<id>google</id>
			<name>google</name>
			<url>https://maven.google.com/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.micronaut</groupId>
				<artifactId>micronaut-bom</artifactId>
				<version>${micronaut.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-inject</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-validation</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-http-server-netty</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-runtime</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.configuration</groupId>
			<artifactId>micronaut-jdbc-hikari</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.configuration</groupId>
			<artifactId>micronaut-hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micronaut.configuration</groupId>
			<artifactId>micronaut-kafka</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>io.micronaut.data</groupId>
			<artifactId>micronaut-data-hibernate-jpa</artifactId>
			<version>${micronaut-data.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micronaut.data</groupId>
			<artifactId>micronaut-data-processor</artifactId>
			<version>${micronaut-data.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micronaut.graphql</groupId>
			<artifactId>micronaut-graphql</artifactId>
			<version>${micronaut-graphql.version}</version>
		</dependency>
		<dependency>
			<groupId>io.arrow-kt</groupId>
			<artifactId>arrow-core-data</artifactId>
			<version>${arrow.version}</version>
		</dependency>
		<dependency>
			<groupId>nl.openweb</groupId>
			<artifactId>topology</artifactId>
			<version>${topology.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.kafka</groupId>
					<artifactId>kafka-clients</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-annotation-processing-maven</artifactId>
			<version>${kotlin.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-core</artifactId>
			<version>${kotlin-coroutines.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-reactive</artifactId>
			<version>${kotlin-coroutines.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>ge-docker</finalName>
		<sourceDirectory>src/main/kotlin</sourceDirectory>
		<testSourceDirectory>src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>${exec.mainClass}</mainClass>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<configuration>
					<jvmTarget>${java.version}</jvmTarget>
					<args>
						<arg>-Xjsr305=strict</arg>
					</args>
					<compilerPlugins>
						<plugin>all-open</plugin>
						<plugin>jpa</plugin>
					</compilerPlugins>
					<pluginOptions>
						<option>all-open:annotation=io.micronaut.aop.Around</option>
					</pluginOptions>
				</configuration>
				<executions>
					<execution>
						<id>kapt</id>
						<goals>
							<goal>kapt</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>src/main/kotlin</sourceDir>
							</sourceDirs>
							<annotationProcessorPaths>
								<annotationProcessorPath>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject-java</artifactId>
									<version>${micronaut.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>org.jetbrains.kotlin</groupId>
									<artifactId>kotlin-annotation-processing-maven</artifactId>
									<version>${kotlin.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>io.micronaut.configuration</groupId>
									<artifactId>micronaut-openapi</artifactId>
									<version>${micronaut-openapi.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-tracing</artifactId>
									<version>${micronaut.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>io.micronaut.data</groupId>
									<artifactId>micronaut-data-processor</artifactId>
									<version>${micronaut-data.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>javax.persistence</groupId>
									<artifactId>javax.persistence-api</artifactId>
									<version>${javax.persistence-api.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>io.micronaut.configuration</groupId>
									<artifactId>micronaut-hibernate-jpa</artifactId>
									<version>${micronaut-hibernate.version}</version>
								</annotationProcessorPath>
							</annotationProcessorPaths>
						</configuration>
					</execution>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-kapt</id>
						<goals>
							<goal>test-kapt</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
							</sourceDirs>
							<annotationProcessorPaths>
								<annotationProcessorPath>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject-java</artifactId>
									<version>${micronaut.version}</version>
								</annotationProcessorPath>
								<annotationProcessorPath>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-validation</artifactId>
									<version>${micronaut.version}</version>
								</annotationProcessorPath>
							</annotationProcessorPaths>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/target/generated-sources/kapt/test</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-noarg</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<proc>none</proc>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*Spec.*</include>
							<include>**/*Test.*</include>
						</includes>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.junit.jupiter</groupId>
							<artifactId>junit-jupiter-engine</artifactId>
							<version>5.3.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
