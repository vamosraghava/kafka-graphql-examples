---
version: '2.2'
services:

  command-handler:
    build:
      context: command-handler
    container_name: command-handler
    environment:
      DB_PORT: "25432"
      DB_HOSTNAME: "db-ch"
      KAFKA_BROKERS: "kafka-1:19093,kafka-2:19095,kafka-3:19097"
      SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      SSL_KEYSTORE_LOCATION: "kafka.command-handler.keystore.jks"
      SSL_TRUSTSTORE_LOCATION: "kafka.command-handler.truststore.jks"
      SSL_PASSWORD: "kafka-graphql-examples"
    volumes:
      - kafka-graphql-certs:/etc/kafka/secrets
    mem_limit: 300m
    restart: always

  graphql-endpoint:
    build:
      context: graphql-endpoint
    container_name: graphql-endpoint
    ports:
      - "8888:8888"
    depends_on:
      - command-handler
    environment:
      DB_HOSTNAME: "db-ge"
      KAFKA_BOOTSTRAP_SERVERS: "kafka-1:19093,kafka-2:19095,kafka-3:19097"
      KAFKA_CONSUMERS_DEFAULT_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_PRODUCERS_COMMAND_PUBLISHER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_SECURITY_PROTOCOL: "SSL"
      KAFKA_SSL_TRUSTSTORE_LOCATION: "/etc/kafka/secrets/kafka.graphql-endpoint.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_PASSWORD: "kafka-graphql-examples"
      KAFKA_SSL_KEYSTORE_LOCATION: "/etc/kafka/secrets/kafka.graphql-endpoint.keystore.jks"
      KAFKA_SSL_KEYSTORE_PASSWORD: "kafka-graphql-examples"
      KAFKA_SSL_KEY_PASSWORD: "kafka-graphql-examples"
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - kafka-graphql-certs:/etc/kafka/secrets
    mem_limit: 1500m
    restart: always

  frontend:
    build:
      context: frontend
    container_name: frontend
    ports:
      - "8181:80"
    depends_on:
      - graphql-endpoint
    environment:
      - NGINX_PORT=80
    restart: always

volumes:
  kafka-graphql-certs:
    external: true
